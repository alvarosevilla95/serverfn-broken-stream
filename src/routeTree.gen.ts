/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as ChatRouteRouteImport } from './routes/_chat/route'
import { Route as ChatIndexRouteImport } from './routes/_chat/index'
import { Route as ChatIdRouteImport } from './routes/_chat/$id'
import { ServerRoute as StatusServerRouteImport } from './routes/status'

const rootServerRouteImport = createServerRootRoute()

const ChatRouteRoute = ChatRouteRouteImport.update({
  id: '/_chat',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatIndexRoute = ChatIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ChatRouteRoute,
} as any)
const ChatIdRoute = ChatIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => ChatRouteRoute,
} as any)
const StatusServerRoute = StatusServerRouteImport.update({
  id: '/status',
  path: '/status',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/$id': typeof ChatIdRoute
  '/': typeof ChatIndexRoute
}
export interface FileRoutesByTo {
  '/$id': typeof ChatIdRoute
  '/': typeof ChatIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_chat': typeof ChatRouteRouteWithChildren
  '/_chat/$id': typeof ChatIdRoute
  '/_chat/': typeof ChatIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/$id' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/$id' | '/'
  id: '__root__' | '/_chat' | '/_chat/$id' | '/_chat/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  ChatRouteRoute: typeof ChatRouteRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/status': typeof StatusServerRoute
}
export interface FileServerRoutesByTo {
  '/status': typeof StatusServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/status': typeof StatusServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/status'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/status'
  id: '__root__' | '/status'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  StatusServerRoute: typeof StatusServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_chat': {
      id: '/_chat'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ChatRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_chat/': {
      id: '/_chat/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ChatIndexRouteImport
      parentRoute: typeof ChatRouteRoute
    }
    '/_chat/$id': {
      id: '/_chat/$id'
      path: '/$id'
      fullPath: '/$id'
      preLoaderRoute: typeof ChatIdRouteImport
      parentRoute: typeof ChatRouteRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/status': {
      id: '/status'
      path: '/status'
      fullPath: '/status'
      preLoaderRoute: typeof StatusServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface ChatRouteRouteChildren {
  ChatIdRoute: typeof ChatIdRoute
  ChatIndexRoute: typeof ChatIndexRoute
}

const ChatRouteRouteChildren: ChatRouteRouteChildren = {
  ChatIdRoute: ChatIdRoute,
  ChatIndexRoute: ChatIndexRoute,
}

const ChatRouteRouteWithChildren = ChatRouteRoute._addFileChildren(
  ChatRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  ChatRouteRoute: ChatRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  StatusServerRoute: StatusServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
